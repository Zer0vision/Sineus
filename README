# Beat & Mayhem — геймдизайн и техплан

Минимум кода, максимум «темы». Прототип должен быть готов к демонстрации за 60 секунд геймплея.

## Core loop
- Свободное движение (WASD).
- Стрельба разрешена только в окно «допуска по биту» (например, ±100 мс).
- Промах или выстрел вне окна → +хаос и мгновенный микро-ивент (лишний враг, «перегрев» пушки на 1 такт).
- За точные выстрелы копится комбо. При заполнении комбо активируется «Order Burst»: сбрасывает хаос-метр и даёт замедление на 1–2 такта.

## Состояния мира
- **Beat (тик)** — враги совершают рывок/атаку.
- **Offbeat** — телеграфы атак, сбор ресурсов.
- **Chaos_meter (0..100)** — растёт от миссов, уменьшает «допуск» по таймингу и ускоряет спавн врагов.

## Скоп на 48 часов
- 1 арена.
- 2 типа обычных врагов: рывок и спиральные снаряды.
- 1 босс-шар с фазой «рассыпание темпа».
- 1 оружие (пулемёт).
- 3 перка: метроном-аура, пірсинг, краткий стоп-тайм.
- 1 музыкальный трек (90–110 BPM).
- Визуальный метроном (пульсирующее кольцо).
- Сборки: Windows + WebGL.

## Распределение задач
- **Прогер A:** BeatClock, окно допуска, эффекты попадания.
- **Прогер B:** враги, спавнер, хаос-метр (ускорение волн).
- **Прогер C:** UI (метроном-кольцо, комбо, хаос-бар), меню/рестарт.
- **Дизайнеры:** минималистичный набор ассетов (круги, треугольники, линейные VFX), вспышки по долям, читаемые цвета.

## Мини-техплан
- **BeatClock:** фиксированный BPM → `beatInterval = 60f / BPM`. Событие `OnBeat(int index)`. Допуск: `abs((t % beatInterval) - nearestBeat) < windowMs / 1000`.
- **ChaosSpawner:** базовый спавн по времени + множитель от `chaos_meter`.
- **Weapon:** `CanFire()` возвращает true только в допуске; промах увеличивает хаос.
- **Визуал:** круг у прицела сжимается к моменту доли; при «идеале» — вспышка.

## Заготовки от LLM
### 1. Генерация волн и паттернов
Просите ИИ отдать JSON:

```json
{
  "bpm": 100,
  "waves": [
    {"bar": 1, "spawns":[{"t":"dash","n":4,"angle":"cross"}]},
    {"bar": 3, "spawns":[{"t":"spiral","n":8,"rate":"eighth"}]},
    {"bar": 5, "boss":{"t":"orb","phases":[{"lenBars":2,"pattern":"slow-spokes"},{"lenBars":2,"pattern":"fast-chaos"}]}}
  ]
}
```

Парсите `bar` → секунды и вызывайте `Spawn(type, n)`.

### 2. Балансировочные итерации
Запрос: «Сгенерируй 3 варианта волн для арены 2 минуты на BPM=100: лёгкий/средний/хард, где хард увеличивает спавн при chaos>60. Формат как прежде.»

### 3. Тексты и тональность
Запрос: «Напиши 6 коротких названий перков и по 1-й строке описания, стиль — кибер-весёлый, без сленга 18+».

## Арт и звук
- Стиль: абстрактные формы (круги, треугольники), 2–3 цвета + белый, яркие вспышки на «долю».
- SFX: выстрел/попадание «в такт» — чистый звук, «вне такта» — шершавый диссонанс.
- Музыка: один луп в 100 BPM, 4–8 тактов. Каждые 16 тактов — «брейк» и спавн микро-ивента.

## Фейлсейфы и доступность
- Assist-режим: окно допуска ±160–200 мс и громкий клик-метроном.
- Если ритм не заходит: отключить ограничение стрельбы по такту, оставить ×2 урон за попадание «в такт»; хаос растёт от промахов.
- Анти-срыв: если `chaos_meter > 80` держится >5 секунд — авто-Order Burst для возвращения игрока в «флоу».
